integrations:
- integration_type: git_repo
  git_repo: sashaDoubov/llm-foundry
  git_branch: sasha/torch2-attn # use your branch
  # git_commit: # OR use your commit hash
  pip_install: -e .[torch2_gpu]
  ssh_clone: false # Should be true if using a private repo
- integration_type: wandb
  project: sasha-benchmarking-torch2
  entity: mosaic-ml
# We are fetching, converting, and training on the 'val' split
# as it is small and quick to get going for this demo.
# For real training runs, follow the instructions in `llm-foundry/scripts/train/README.md`
# to convert and host the full 'train' dataset.
command: |
  cd llm-foundry/scripts
  composer train/train.py train/yamls/mpt/1b.yaml \
    train_loader.dataset.split=train_small \
    eval_loader.dataset.split=val_small \
    max_duration=100ba \
    eval_interval=0 \
    model.attn_config.attn_impl=torch \
    model.attn_config.alibi=True \
    loggers.wandb="{}" \
    data_remote=oci://mosaicml-internal-datasets/c4/base/pretok-gpt2-2k/

image: mosaicml/pytorch:2.0.0_cu117-python3.10-ubuntu20.04
# Mosaic Cloud will use run_name (with a unique suffix) to populate the env var $COMPOSER_RUN_NAME
run_name: torch-2-alibi-torch

gpu_num: 8
# gpu_type: a100_40gb
# cluster: r0z0 # replace with your cluster here!

# The below is injected as a YAML file: /mnt/config/parameters.yaml
# but is not used in this example.
parameters: {}
